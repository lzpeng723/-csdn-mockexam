plugins {
    id 'java'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11
group 'csdn.c4'
version '1.0-SNAPSHOT'

repositories {
    maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.33'
    implementation 'cn.hutool:hutool-all:5.7.21'
    implementation 'org.apache.poi:poi:5.2.0'
    implementation 'org.apache.poi:poi-ooxml:5.2.0'
    implementation 'mysql:mysql-connector-java:8.0.28'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation 'junit:junit:4.11'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// 复制物料
task copyMaterial(type: Copy) {
    from './workspace'
    into './build/libs/workspace'
}

// 复制依赖
task copyLib(type: Copy) {
    // https://docs.gradle.org/current/javadoc/org/gradle/api/artifacts/ConfigurationContainer.html
    from configurations.compileClasspath
    into './build/libs/lib'
}
// 打包 包括依赖
jar  {
    // https://docs.gradle.org/current/javadoc/org/gradle/api/artifacts/ConfigurationContainer.html
    def classpathStr = configurations.compileClasspath.filter{ it.isFile() }.collect {'lib/' + it.getName()}.join (' ')
    baseName 'csdn-exam-c4-javabase'
    version ''
    manifestContentCharset 'utf-8'
    metadataCharset 'utf-8'
    //noinspection GroovyAssignabilityCheck
    manifest {
        attributes 'Main-Class': 'csdn.c4.Main'
        attributes 'Class-Path': classpathStr
    }
}

// shadowJar.dependsOn copyMaterial
jar.dependsOn copyMaterial
// shadowJar.dependsOn copyLib
jar.dependsOn copyLib